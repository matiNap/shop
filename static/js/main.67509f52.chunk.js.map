{"version":3,"sources":["reducers/appReducer.ts","reducers/index.ts","store.ts","screens/Main/index.tsx","navRoutes.ts","hooks/useBreakpoints.ts","components/Logo/index.tsx","components/Header/components/MenuButton.tsx","components/SideMenu/index.tsx","components/Header/components/TopClothesMenu.tsx","components/Header/components/Type.tsx","components/Dropdown/index.tsx","components/SideMenuItem/index.tsx","components/LangSelector/index.tsx","components/Header/components/AccountMenu.tsx","components/Header/components/Badge.tsx","components/Header/components/UserMenu.tsx","components/Header/index.tsx","hocs/withNavigation.tsx","App.tsx","index.tsx"],"names":["INIT_STATE","lang","appSlice","createSlice","name","initialState","reducers","setLang","state","action","payload","extraReducers","REHYDRATE","app","actions","combineReducers","appReducer","persistConfig","key","storage","persistedReducer","persistReducer","reducer","store","configureStore","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","persistedStore","persistStore","MAIN","WOMEN_HOME","MEN_HOME","PROFILE","ORDERS","isBigScreen","useMediaQuery","minWidth","isMediumScreen","maxWidth","isSmallScreen","to","className","opened","switchOpened","closeIconClass","openIconClas","onClick","size","children","onClose","containerClass","MENS_MENU","title","WOMENS_MENU","data","useHistory","location","pathname","useBreakpoints","map","index","length","path","typeName","selected","Dropdown","handleClickOutside","props","close","document","addEventListener","this","removeEventListener","React","Component","divider","LANGS","code","label","useState","setOpened","useSelector","dispatch","useDispatch","countryCode","aria-label","svg","SideMenu","SideMenuItem","style","marginTop","fontWeight","value","isMainPage","Badge","AccountMenu","LangSelector","menuVisible","sideMenuOpened","setSideMenuOpened","Type","MenuButton","Logo","TopClothesMenu","UserMenu","HigerComponent","display","flexDirection","Header","loading","persistor","exact","component","withNavigation","Main","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"0ZAGMA,EAAa,CACjBC,KAAM,MAGFC,EAAWC,YAAY,CAC3BC,KAAM,MACNC,aAAcL,EACdM,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMP,KAAOQ,EAAOC,UAGxBC,cAAc,eACXC,KAAY,SAACJ,EAAOC,GACnB,IAAMI,EACJJ,EAAOC,SAAWD,EAAOC,QAAQG,IAAMJ,EAAOC,QAAQG,IAAMb,EAC9D,OAAO,2BAAKQ,GAAZ,IAAmBP,KAAMY,EAAIZ,YAKpBM,EAAYL,EAASY,QAArBP,QAEAL,IAAf,QCxBea,cAAgB,CAC7BF,IAAKG,I,QCgBDC,EAAgB,CACpBC,IAAK,OACLC,Q,OAAAA,GAGIC,EAAmBC,YAAeJ,EAAeK,GAEjDC,EAAQC,YAAe,CAC3BF,QAASF,EACTK,UAAU,EACVC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOlB,IAAWmB,IAAOC,IAASC,IAAOC,UAKnDC,EAAiBC,YAAab,GAE5BA,ICnCA,G,MAAA,WACb,OAAO,uCCJIc,EAAO,QACPC,EAAU,UAAMD,EAAN,eACVE,EAAQ,UAAMF,EAAN,aACRG,EAAO,UAAMH,EAAN,YACPI,EAAM,UAAMJ,EAAN,W,gBCFJ,aACb,IAAMK,EAAcC,wBAAc,CAAEC,SAAU,MACxCC,EAAiBF,wBAAc,CAAEG,SAAU,MAC3CC,EAAgBJ,wBAAc,CAAEG,SAAU,MAEhD,MAAO,CACLJ,cACAG,eAAgBA,IAAmBE,EACnCA,cAAeA,GAAiBF,ICLrB,G,MAAA,WACb,OACE,kBAAC,IAAD,CAAMG,GAAIX,EAAMY,UAAU,QACxB,2C,OCAS,cAAsC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,aAClBC,EAAiBF,EAAS,mBAAqB,YAC/CG,EAAeH,EAAS,YAAc,mBAC5C,OACE,yBAAKD,UAAU,cAAcK,QAASH,GAClCD,EAGA,kBAAC,IAAD,CAAKD,UAAWG,EAAgBG,KAAM,KAFtC,kBAAC,IAAD,CAAQN,UAAWI,EAAcE,KAAM,OCJhC,G,MAAA,YAA2C,IAAxCL,EAAuC,EAAvCA,OAAQM,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAC5BC,EAAiBR,EAAS,mBAAqB,YACrD,OACE,yBAAKD,UAAWS,GACbD,GACC,yBAAKR,UAAU,UACb,kBAAC,IAAD,CAAKM,KAAM,GAAID,QAASG,EAASR,UAAU,WAG/C,4BAAKO,MCdLG,EAAY,CAChB,CACEC,MAAO,eACPZ,GAAI,IAEN,CACEY,MAAO,QACPZ,GAAI,IAEN,CACEY,MAAO,WACPZ,GAAI,IAEN,CACEY,MAAO,UACPZ,GAAI,IAEN,CACEY,MAAO,QACPZ,GAAI,IAEN,CACEY,MAAO,cACPZ,GAAI,KAGFa,EAAc,CAClB,CACED,MAAO,eACPZ,GAAI,IAEN,CACEY,MAAO,QACPZ,GAAI,IAEN,CACEY,MAAO,WACPZ,GAAI,IAEN,CACEY,MAAO,UACPZ,GAAI,IAEN,CACEY,MAAO,QACPZ,GAAI,IAEN,CACEY,MAAO,cACPZ,GAAI,KAIO,aAAO,IAIdc,EADFC,cADFC,SAAYC,WAEY1B,EAAWoB,EAAYE,EAEjD,OADwBK,IAAhBxB,YAGJ,wBAAIO,UAAU,QACXa,EAAKK,KAAI,WAAgBC,GAAhB,IAAGR,EAAH,EAAGA,MAAOZ,EAAV,EAAUA,GAAV,OACR,wBAAI9B,IAAK0C,GACP,yBAAKX,UAAU,SACb,kBAAC,IAAD,CAAMD,GAAIA,GAAKY,IAEhBQ,EAAQN,EAAKO,OAAS,GAAK,yBAAKpB,UAAU,oBAM9C,MCtEM,cAAgC,IAA7BqB,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAIhBC,EADFT,cADFC,SAAYC,WAEgBK,EAC9B,OACE,kBAAC,IAAD,CAAMtB,GAAIsB,EAAMrB,UAAWuB,EAAW,gBAAkB,QACrDD,I,wCCNcE,G,kNAOnBC,mBAAqB,WACnB,EAAKC,MAAMC,S,kEANXC,SAASC,iBAAiB,UAAWC,KAAKL,oBAAoB,K,6CAG9DG,SAASG,oBAAoB,UAAWD,KAAKL,oBAAoB,K,+BAKzD,IAAD,EACsBK,KAAKJ,MAA1BnB,EADD,EACCA,SAAUN,EADX,EACWA,OAClB,OACE,wBAAID,UAAWC,EAAS,kBAAoB,mBACzCM,O,GAd6ByB,IAAMC,YCD7B,G,YAAA,YAAmC,IAAhC1B,EAA+B,EAA/BA,SAAU2B,EAAqB,EAArBA,QAC1B,OACE,wBAAIlC,UAAU,4BACZ,yBAAKA,UAAU,kBAAkBO,GAChC2B,GAAW,yBAAKlC,UAAU,yBCD3BmC,EAAQ,CACZ,CACEC,KAAM,KACNC,MAAO,iBAET,CACED,KAAM,KACNC,MAAO,WAII,aAAO,IAAD,EACSC,oBAAS,GADlB,mBACZrC,EADY,KACJsC,EADI,KAEbvF,EAAOwF,aAAY,SAACjF,GAAD,OAAsBA,EAAMK,IAAIZ,QACnDyF,EAAWC,cACTjD,EAAgBwB,IAAhBxB,YACR,OACE,6BACE,yBAAKO,UAAU,oBACb,yBAAKA,UAAU,iBAAiBK,QAAS,kBAAMkC,GAAWtC,KACxD,kBAAC,IAAD,CACE0C,YAAa3F,EACb4F,aAAW,eACXC,KAAG,EACH7C,UAAU,mBAGbP,GACC,kBAAC,EAAD,CAAUQ,OAAQA,EAAQ0B,MAAO,kBAAMY,GAAU,KAC9CJ,EAAMjB,KAAI,WAAkBC,GAAlB,IAAGiB,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACT,wBACEpE,IAAKmE,EACL/B,QAAS,kBAAMoC,EAASnF,EAAQ8E,KAChCpC,UAAqB,IAAVmB,EAAc,kBAAoB,aAE7C,kBAAC,IAAD,CACEwB,YAAaP,EACbQ,aAAYP,EACZQ,KAAG,EACH7C,UAAU,SAEZ,uBAAGA,UAAU,cAAcoC,UAMnC3C,GACA,kBAACqD,EAAD,CAAU7C,OAAQA,EAAQO,QAAS,kBAAM+B,GAAU,KAChDJ,EAAMjB,KAAI,WAAkBC,GAAlB,IAAGiB,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACT,kBAACU,EAAD,CAAcb,QAASf,IAAUgB,EAAMf,OAAS,GAC9C,kBAAC,IAAD,CACEuB,YAAaP,EACbQ,aAAYP,EACZQ,KAAG,EACH7C,UAAU,UAEZ,uBAAGA,UAAU,cAAcoC,UC3D1B,aAAO,IAAD,EACSE,oBAAS,GADlB,mBACZrC,EADY,KACJsC,EADI,KAEX9C,EAAgBwB,IAAhBxB,YACR,OACE,yBAAKO,UAAU,0BACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CACEA,UAAU,OACVM,KAAM,GACND,QAAS,WACPkC,GAAWtC,MAGdR,GACC,kBAAC,EAAD,CAAUQ,OAAQA,EAAQ0B,MAAO,kBAAMY,GAAU,KAC/C,wBAAIvC,UAAU,gBAAgBgD,MAAO,CAAEC,UAAW,IAChD,kBAAC,IAAD,CAAQ3C,KAAM,GAAIN,UAAU,SAC5B,kBAAC,IAAD,CAAMD,GAAIR,EAASS,UAAU,SAA7B,YAIF,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAWM,KAAM,GAAIN,UAAU,SAC/B,kBAAC,IAAD,CAAMD,GAAIP,EAAQQ,UAAU,SAA5B,WAIF,yBAAKA,UAAU,YACf,wBAAIA,UAAU,iBACZ,kBAAC,IAAD,CAAMD,GAAIX,EAAMY,UAAU,SAA1B,gBAONP,GACA,kBAACqD,EAAD,CAAU7C,OAAQA,EAAQO,QAAS,kBAAM+B,GAAU,KACjD,kBAACQ,EAAD,CAAcb,SAAO,GACnB,kBAAC,IAAD,CAAQ5B,KAAM,GAAIN,UAAU,SAC5B,kBAAC,IAAD,CAAMD,GAAIR,EAASS,UAAU,SAA7B,YAIF,kBAAC+C,EAAD,CAAcb,SAAO,GACnB,kBAAC,IAAD,CAAW5B,KAAM,GAAIN,UAAU,SAC/B,kBAAC,IAAD,CAAMD,GAAIP,EAAQQ,UAAU,SAA5B,WAIF,kBAAC+C,EAAD,KACE,kBAAC,IAAD,CAAMhD,GAAIX,EAAMY,UAAU,QAAQgD,MAAO,CAAEE,WAAY,SAAvD,gBCtDG,eAAuB,IAApBC,EAAmB,EAAnBA,MAChB,OAAO,yBAAKnD,UAAU,SAASmD,ICIlB,eAA4B,IAAzBC,EAAwB,EAAxBA,WAEhB,OACE,yBAAKpD,UAAU,cACXoD,GACA,oCACE,kBAAC,IAAD,CAAMrD,GAAG,OAAOC,UAAU,QACxB,kBAAC,IAAD,CAAgBM,KAAM,KACtB,kBAAC+C,GAAD,CAAOF,MAAO,KAEhB,6BAEI,kBAACG,EAAD,QASR,yBAAKtD,UAAU,eACb,kBAACuD,EAAD,SCrBO,I,MAAA,WAAO,IAIdC,EADF1C,cADFC,SAAYC,WAEmB5B,EAJd,EAKoC6B,IAA/CxB,EALW,EAKXA,YAAaG,EALF,EAKEA,eAAgBE,EALlB,EAKkBA,cALlB,EAMyBwC,oBAAS,GANlC,mBAMZmB,EANY,KAMIC,EANJ,KAQnB,OACE,gCACE,yBAAK1D,UAAU,qBACXP,GAAeG,IACf,6BACGH,EACC,oCACE,kBAACkE,EAAD,CAAMrC,SAAS,QAAQD,KAAMhC,IAC7B,kBAACsE,EAAD,CAAMrC,SAAS,MAAMD,KAAM/B,KAG7B,kBAACsE,EAAD,CACE3D,OAAQwD,EACRvD,aAAc,kBAAMwD,GAAmBD,OAK/C,yBAAKzD,UAAU,OACb,kBAAC6D,EAAD,MACCL,GAAe,kBAACM,EAAD,OAElB,kBAACC,GAAD,CAAUX,YAAaI,KAExB1D,GACC,kBAAC8D,EAAD,CACE3D,OAAQwD,EACRvD,aAAc,kBAAMwD,GAAmBD,OAGzChE,GACA,kBAACqD,EAAD,CAAU7C,OAAQwD,GAChB,yCCjDK,YAACO,GACd,OAAO,SAACtC,GACN,OACE,yBAAKsB,MAAO,CAAEiB,QAAS,OAAQC,cAAe,WAC5C,kBAACC,GAAD,MACA,kBAACH,EAAmBtC,MCGb,I,MAAA,kBACb,kBAAC,IAAD,CAAUpD,MAAOA,GACf,kBAAC,IAAD,CAAa8F,QAAS,KAAMC,UAAWnF,GACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoF,OAAK,EAACjD,KAAMjC,EAAMmF,UAAWC,GAAeC,KACnD,kBAAC,IAAD,CACEH,OAAK,EACLjD,KAAM/B,EACNiF,UAAWC,IAAe,WACxB,OAAO,8CAGX,kBAAC,IAAD,CACEF,OAAK,EACLjD,KAAMhC,EACNkF,UAAWC,IAAe,WACxB,OAAO,sDCxBrBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,GAAD,OAEFjD,SAASkD,eAAe,W","file":"static/js/main.67509f52.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { REHYDRATE } from \"redux-persist\";\n\nconst INIT_STATE = {\n  lang: \"US\",\n};\n\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState: INIT_STATE,\n  reducers: {\n    setLang: (state, action) => {\n      state.lang = action.payload;\n    },\n  },\n  extraReducers: {\n    [REHYDRATE]: (state, action) => {\n      const app =\n        action.payload && action.payload.app ? action.payload.app : INIT_STATE;\n      return { ...state, lang: app.lang };\n    },\n  },\n});\n\nexport const { setLang } = appSlice.actions;\n\nexport default appSlice.reducer;\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\nexport default combineReducers({\n  app: appReducer,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n  Action,\n} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PURGE,\n  REGISTER,\n  PERSIST,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistedStore = persistStore(store);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","import React from \"react\";\nimport \"./style.scss\";\n\nexport default () => {\n  return <div>Main</div>;\n};\n","export const MAIN = \"/shop\";\nexport const WOMEN_HOME = `${MAIN}/women-home`;\nexport const MEN_HOME = `${MAIN}/men-home`;\nexport const PROFILE = `${MAIN}/profile`;\nexport const ORDERS = `${MAIN}/orders`;\n\n// export const MEN_NEW_ARRIVALS\n","import { useMediaQuery } from \"react-responsive\";\n\nexport default () => {\n  const isBigScreen = useMediaQuery({ minWidth: 900 });\n  const isMediumScreen = useMediaQuery({ maxWidth: 900 });\n  const isSmallScreen = useMediaQuery({ maxWidth: 600 });\n\n  return {\n    isBigScreen,\n    isMediumScreen: isMediumScreen && !isSmallScreen,\n    isSmallScreen: isSmallScreen && isMediumScreen,\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MAIN } from \"../../navRoutes\";\nimport \"./style.scss\";\n\nexport default () => {\n  return (\n    <Link to={MAIN} className=\"logo\">\n      <h1>ShopLogo</h1>\n    </Link>\n  );\n};\n","import React from \"react\";\nimport { FiMenu, FiX } from \"react-icons/fi\";\n\ninterface Props {\n  switchOpened: () => void;\n  opened: boolean;\n}\n\nexport default ({ opened, switchOpened }: Props) => {\n  const closeIconClass = opened ? \"menu-icon closed\" : \"menu-icon\";\n  const openIconClas = opened ? \"menu-icon\" : \"menu-icon closed\";\n  return (\n    <div className=\"menu-button\" onClick={switchOpened}>\n      {!opened ? (\n        <FiMenu className={openIconClas} size={30} />\n      ) : (\n        <FiX className={closeIconClass} size={30} />\n      )}\n    </div>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport \"./style.scss\";\n\ninterface Props {\n  opened: boolean;\n  children: ReactNode;\n  onClose?: () => void;\n}\n\nexport default ({ opened, children, onClose }: Props) => {\n  const containerClass = opened ? \"side-menu opened\" : \"side-menu\";\n  return (\n    <div className={containerClass}>\n      {onClose && (\n        <div className=\"header\">\n          <FiX size={30} onClick={onClose} className=\"close\" />\n        </div>\n      )}\n      <ul>{children}</ul>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport useBreakpoints from \"../../../hooks/useBreakpoints\";\nimport { MEN_HOME } from \"../../../navRoutes\";\n\nconst MENS_MENU = [\n  {\n    title: \"New arrivals\",\n    to: \"\",\n  },\n  {\n    title: \"Pants\",\n    to: \"\",\n  },\n  {\n    title: \"T-shirts\",\n    to: \"\",\n  },\n  {\n    title: \"Jackets\",\n    to: \"\",\n  },\n  {\n    title: \"Shoes\",\n    to: \"\",\n  },\n  {\n    title: \"Accessories\",\n    to: \"\",\n  },\n];\nconst WOMENS_MENU = [\n  {\n    title: \"New arrivals\",\n    to: \"\",\n  },\n  {\n    title: \"Pants\",\n    to: \"\",\n  },\n  {\n    title: \"T-shirts\",\n    to: \"\",\n  },\n  {\n    title: \"Jackets\",\n    to: \"\",\n  },\n  {\n    title: \"Shoes\",\n    to: \"\",\n  },\n  {\n    title: \"Accessories\",\n    to: \"\",\n  },\n];\n\nexport default () => {\n  const {\n    location: { pathname },\n  } = useHistory();\n  const data = pathname === MEN_HOME ? MENS_MENU : WOMENS_MENU;\n  const { isBigScreen } = useBreakpoints();\n  if (isBigScreen) {\n    return (\n      <ul className=\"menu\">\n        {data.map(({ title, to }, index) => (\n          <li key={title}>\n            <div className=\"label\">\n              <Link to={to}>{title}</Link>\n            </div>\n            {index < data.length - 1 && <div className=\"menu-space\" />}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return null;\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\ninterface Props {\n  path: string;\n  typeName: string;\n}\n\nexport default ({ path, typeName }: Props) => {\n  const {\n    location: { pathname },\n  } = useHistory();\n  const selected = pathname === path;\n  return (\n    <Link to={path} className={selected ? \"type selected\" : \"type\"}>\n      {typeName}\n    </Link>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport \"./style.scss\";\n\ninterface Props {\n  children: ReactNode[];\n  opened: boolean;\n  close: () => void;\n}\n\nexport default class Dropdown extends React.Component<Props> {\n  componentDidMount() {\n    document.addEventListener(\"mouseup\", this.handleClickOutside, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.handleClickOutside, false);\n  }\n  handleClickOutside = () => {\n    this.props.close();\n  };\n  render() {\n    const { children, opened } = this.props;\n    return (\n      <ul className={opened ? \"dropdown-opened\" : \"dropdown-closed\"}>\n        {children}\n      </ul>\n    );\n  }\n}\n","import React, { ReactNode } from \"react\";\nimport \"./style.scss\";\n\ninterface Props {\n  children: ReactNode;\n  divider?: boolean;\n}\n\nexport default ({ children, divider }: Props) => {\n  return (\n    <li className=\"side-menu-item-container\">\n      <div className=\"side-menu-item\">{children}</div>\n      {divider && <div className=\"side-menu-divider\" />}\n    </li>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Dropdown from \"../Dropdown\";\nimport \"./style.scss\";\nimport { RootState } from \"../../store\";\nimport { setLang } from \"../../reducers/appReducer\";\nimport useBreakpoints from \"../../hooks/useBreakpoints\";\nimport SideMenu from \"../SideMenu\";\nimport SideMenuItem from \"../SideMenuItem\";\n\nconst LANGS = [\n  {\n    code: \"US\",\n    label: \"United States\",\n  },\n  {\n    code: \"PL\",\n    label: \"Poland\",\n  },\n];\n\nexport default () => {\n  const [opened, setOpened] = useState(false);\n  const lang = useSelector((state: RootState) => state.app.lang);\n  const dispatch = useDispatch();\n  const { isBigScreen } = useBreakpoints();\n  return (\n    <div>\n      <div className=\"select-container\">\n        <div className=\"flag-container\" onClick={() => setOpened(!opened)}>\n          <ReactCountryFlag\n            countryCode={lang}\n            aria-label=\"Unied States\"\n            svg\n            className=\"flag-selected\"\n          />\n        </div>\n        {isBigScreen && (\n          <Dropdown opened={opened} close={() => setOpened(false)}>\n            {LANGS.map(({ code, label }, index) => (\n              <li\n                key={code}\n                onClick={() => dispatch(setLang(code))}\n                className={index === 0 ? \"flag-item-first\" : \"flag-item\"}\n              >\n                <ReactCountryFlag\n                  countryCode={code}\n                  aria-label={label}\n                  svg\n                  className=\"flag\"\n                />\n                <p className=\"flag-label\">{code}</p>\n              </li>\n            ))}\n          </Dropdown>\n        )}\n      </div>\n      {!isBigScreen && (\n        <SideMenu opened={opened} onClose={() => setOpened(false)}>\n          {LANGS.map(({ code, label }, index) => (\n            <SideMenuItem divider={index !== LANGS.length - 1}>\n              <ReactCountryFlag\n                countryCode={code}\n                aria-label={label}\n                svg\n                className=\"flag-\"\n              />\n              <p className=\"flag-label\">{code}</p>\n            </SideMenuItem>\n          ))}\n        </SideMenu>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FiArchive, FiUser } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { MAIN, ORDERS, PROFILE } from \"../../../navRoutes\";\nimport Dropdown from \"../../Dropdown\";\nimport useBreakpoints from \"../../../hooks/useBreakpoints\";\nimport SideMenu from \"../../SideMenu\";\nimport SideMenuItem from \"../../SideMenuItem\";\n\nexport default () => {\n  const [opened, setOpened] = useState(false);\n  const { isBigScreen } = useBreakpoints();\n  return (\n    <div className=\"account-menu-container\">\n      <div className=\"account-menu\">\n        <FiUser\n          className=\"user\"\n          size={25}\n          onClick={() => {\n            setOpened(!opened);\n          }}\n        />\n        {isBigScreen && (\n          <Dropdown opened={opened} close={() => setOpened(false)}>\n            <li className=\"dropdown-item\" style={{ marginTop: 0 }}>\n              <FiUser size={20} className=\"icon\" />\n              <Link to={PROFILE} className=\"label\">\n                Profile\n              </Link>\n            </li>\n            <li className=\"dropdown-item\">\n              <FiArchive size={20} className=\"icon\" />\n              <Link to={ORDERS} className=\"label\">\n                Orders\n              </Link>\n            </li>\n            <div className=\"divider\"></div>\n            <li className=\"dropdown-item\">\n              <Link to={MAIN} className=\"label\">\n                Sign out\n              </Link>\n            </li>\n          </Dropdown>\n        )}\n      </div>\n      {!isBigScreen && (\n        <SideMenu opened={opened} onClose={() => setOpened(false)}>\n          <SideMenuItem divider>\n            <FiUser size={20} className=\"icon\" />\n            <Link to={PROFILE} className=\"label\">\n              Profile\n            </Link>\n          </SideMenuItem>\n          <SideMenuItem divider>\n            <FiArchive size={20} className=\"icon\" />\n            <Link to={ORDERS} className=\"label\">\n              Orders\n            </Link>\n          </SideMenuItem>\n          <SideMenuItem>\n            <Link to={MAIN} className=\"label\" style={{ fontWeight: \"bold\" }}>\n              Sign out\n            </Link>\n          </SideMenuItem>\n        </SideMenu>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  value: string | number;\n}\n\nexport default ({ value }: Props) => {\n  return <div className=\"badge\">{value}</div>;\n};\n","import React from \"react\";\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport LangSelector from \"../../LangSelector\";\nimport AccountMenu from \"./AccountMenu\";\nimport Badge from \"./Badge\";\n\ninterface Props {\n  isMainPage: boolean;\n}\n\nexport default ({ isMainPage }: Props) => {\n  const signedIn = true;\n  return (\n    <div className=\"user-menu\">\n      {!isMainPage && (\n        <>\n          <Link to=\"cart\" className=\"cart\">\n            <FiShoppingCart size={25} />\n            <Badge value={2} />\n          </Link>\n          <div>\n            {signedIn ? (\n              <AccountMenu />\n            ) : (\n              <Link to=\"loginPage\">\n                <p className=\"login\">Login</p>\n              </Link>\n            )}\n          </div>\n        </>\n      )}\n      <div className=\"select-flag\">\n        <LangSelector />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useBreakpoints from \"../../hooks/useBreakpoints\";\nimport { MAIN, MEN_HOME, WOMEN_HOME } from \"../../navRoutes\";\nimport Logo from \"../Logo\";\nimport MenuButton from \"./components/MenuButton\";\nimport SideMenu from \"../SideMenu\";\nimport TopClothesMenu from \"./components/TopClothesMenu\";\nimport Type from \"./components/Type\";\nimport UserMenu from \"./components/UserMenu\";\nimport \"./style.scss\";\n\nexport default () => {\n  const {\n    location: { pathname },\n  } = useHistory();\n  const menuVisible = pathname !== MAIN;\n  const { isBigScreen, isMediumScreen, isSmallScreen } = useBreakpoints();\n  const [sideMenuOpened, setSideMenuOpened] = useState(false);\n\n  return (\n    <header>\n      <div className=\"header-container\">\n        {(isBigScreen || isMediumScreen) && (\n          <div>\n            {isBigScreen ? (\n              <>\n                <Type typeName=\"Women\" path={WOMEN_HOME} />\n                <Type typeName=\"Men\" path={MEN_HOME} />\n              </>\n            ) : (\n              <MenuButton\n                opened={sideMenuOpened}\n                switchOpened={() => setSideMenuOpened(!sideMenuOpened)}\n              />\n            )}\n          </div>\n        )}\n        <div className=\"nav\">\n          <Logo />\n          {menuVisible && <TopClothesMenu />}\n        </div>\n        <UserMenu isMainPage={!menuVisible} />\n      </div>\n      {isSmallScreen && (\n        <MenuButton\n          opened={sideMenuOpened}\n          switchOpened={() => setSideMenuOpened(!sideMenuOpened)}\n        />\n      )}\n      {!isBigScreen && (\n        <SideMenu opened={sideMenuOpened}>\n          <div>test</div>\n        </SideMenu>\n      )}\n    </header>\n  );\n};\n","import React from \"react\";\nimport Header from \"../components/Header\";\n\nexport default (HigerComponent: React.ComponentType<any>) => {\n  return (props) => {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header />\n        <HigerComponent {...props} />\n      </div>\n    );\n  };\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store, { persistedStore } from \"./store\";\nimport Main from \"./screens/Main\";\nimport { MAIN, MEN_HOME, WOMEN_HOME } from \"./navRoutes\";\n\nimport withNavigation from \"./hocs/withNavigation\";\nimport \"./style.scss\";\n\nexport default () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistedStore}>\n      <Router>\n        <Switch>\n          <Route exact path={MAIN} component={withNavigation(Main)} />\n          <Route\n            exact\n            path={MEN_HOME}\n            component={withNavigation(() => {\n              return <div>Men home</div>;\n            })}\n          />\n          <Route\n            exact\n            path={WOMEN_HOME}\n            component={withNavigation(() => {\n              return <div>Women home</div>;\n            })}\n          />\n        </Switch>\n      </Router>\n    </PersistGate>\n  </Provider>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}