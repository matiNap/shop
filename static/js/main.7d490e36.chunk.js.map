{"version":3,"sources":["reducers/appReducer.ts","reducers/index.ts","store.ts","screens/Main/index.tsx","theme/material.ts","ThemeProvider.tsx","App.js","navRoutes.ts","hocs/withNavigation.tsx","index.js"],"names":["appSlice","createSlice","name","initialState","reducers","test","combineReducers","app","appReducer","persistConfig","key","storage","persistedReducer","persistReducer","reducer","store","configureStore","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistedStore","persistStore","createMuiTheme","palette","primary","main","secondary","light","dark","text","typography","fontFamily","children","theme","ThemeProvider","style","color","backgroundColor","minHeight","loading","persistor","exact","path","component","HigerComponent","Main","props","display","flexDirection","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"2NAUeA,EAREC,YAAY,CAC3BC,KAAM,MACNC,aAAc,GACdC,SAAU,CACRC,KAAM,gBAIV,QCReC,cAAgB,CAC7BC,IAAKC,I,wBCgBDC,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAmBC,YAAeJ,EAAeK,GAEjDC,EAAQC,YAAe,CAC3BF,QAASF,EACTK,UAAU,EACVC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAKnDC,EAAiBC,YAAad,GAE5BA,ICpCA,aACb,OAAO,sC,gBCDMe,cAAe,CAC5BC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTC,MAAO,UACPF,KAAM,UACNG,KAAM,WAGRC,KAAM,CACJL,QAAS,UACTE,UAAW,YAGfI,WAAY,CACVC,WAAY,WCXD,cAA0B,IAAvBC,EAAsB,EAAtBA,SACRT,EAAYU,EAAZV,QACAM,EAASN,EAATM,KACR,OACE,kBAACK,EAAA,EAAkB,CAAED,SACnB,yBACEE,MAAO,CACLC,MAAOP,EAAKL,QACZa,gBAAiBd,EAAQG,UAAUD,KACnCa,UAAW,SAGZN,KCTM,aACb,OACE,kBAAC,IAAD,CAAUzB,MAAOA,GACf,kBAAC,IAAD,CAAagC,QAAS,KAAMC,UAAWpB,GACrC,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KClBP,QDkBmBC,WEhBvBC,EFgBiDC,EEfxD,SAACC,GACN,OACE,yBAAKX,MAAO,CAAEY,QAAS,OAAQC,cAAe,WAC5C,kBAACJ,EAAmBE,aAJb,IAACF,GCEhBK,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.7d490e36.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState: [],\n  reducers: {\n    test: () => {},\n  },\n});\n\nexport default appSlice.reducer;\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\nexport default combineReducers({\n  app: appReducer,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n  Action,\n} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PURGE,\n  REGISTER,\n  PERSIST,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: false,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistedStore = persistStore(store);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","import React from \"react\";\n\nexport default () => {\n  return <div>Main</div>;\n};\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport default createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#0089f2\",\n    },\n    secondary: {\n      light: \"#595959\",\n      main: \"#3D3B3C\",\n      dark: \"#323031\",\n    },\n\n    text: {\n      primary: \"#F2F2F2\",\n      secondary: \"#2F2F2F\",\n    },\n  },\n  typography: {\n    fontFamily: \"Rubik\",\n  },\n});\n","import React, { ReactNode } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport theme from \"./theme/material\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  const { palette } = theme;\n  const { text } = palette;\n  return (\n    <ThemeProvider {...{ theme }}>\n      <div\n        style={{\n          color: text.primary,\n          backgroundColor: palette.secondary.main,\n          minHeight: \"100%\",\n        }}\n      >\n        {children}\n      </div>\n    </ThemeProvider>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store, { persistedStore } from \"./store\";\nimport Main from \"./screens/Main\";\nimport { MAIN } from \"./navRoutes\";\n\nimport ThemeProvider from \"./ThemeProvider\";\nimport withNavigation from \"./hocs/withNavigation\";\n\nexport default () => {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistedStore}>\n        <ThemeProvider>\n          <Router>\n            <Switch>\n              <Route exact path={MAIN} component={withNavigation(Main)} />\n            </Switch>\n          </Router>\n        </ThemeProvider>\n      </PersistGate>\n    </Provider>\n  );\n};\n","export const MAIN = \"/shop\";\n","import React from \"react\";\n\nexport default (HigerComponent: React.ComponentType<any>) => {\n  return (props) => {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <HigerComponent {...props} />\n      </div>\n    );\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}