{"version":3,"sources":["firebaseConfig.js","Firebase/index.ts","reducers/appReducer.ts","reducers/index.ts","store.ts","screens/Main/index.tsx","navRoutes.ts","hooks/useBreakpoints.ts","components/Logo/index.tsx","components/Header/components/MenuButton.tsx","components/SideMenu/index.tsx","components/Header/components/TopClothesMenu.tsx","components/Header/components/Type.tsx","components/Dropdown/index.tsx","components/SideMenuItem/index.tsx","components/LangSelector/index.tsx","components/Header/components/AccountMenu.tsx","components/Header/components/Badge.tsx","components/Header/components/UserMenu.tsx","components/Header/index.tsx","hocs/withNavigation.tsx","screens/Auth/components/BottomRedirect.tsx","screens/Auth/components/Container.tsx","screens/Auth/components/ErrorText.tsx","screens/Auth/components/Input.tsx","screens/Auth/components/Loading.tsx","screens/Auth/components/Title.tsx","screens/Auth/SignIn/index.tsx","components/Popup/index.tsx","screens/Auth/components/SuccessWindow.tsx","screens/Auth/SignUp/index.tsx","Firebase/helpers.ts","screens/Auth/Forgot/index.tsx","screens/Auth/index.tsx","App.tsx","index.tsx"],"names":["JSON","parse","process","REACT_APP_FIREBASE_CONFIG","firebase","firebaseConfig","firestore","INIT_STATE","lang","user","appSlice","createSlice","name","initialState","reducers","setLang","state","action","payload","setUser","extraReducers","REHYDRATE","app","actions","combineReducers","appReducer","persistConfig","key","storage","persistedReducer","persistReducer","reducer","store","configureStore","devTools","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","persistedStore","persistStore","MAIN","WOMEN_HOME","MEN_HOME","PROFILE","ORDERS","AUTH","SIGN_IN","SIGN_UP","RESET_PASS","isBigScreen","useMediaQuery","minWidth","isMediumScreen","maxWidth","isSmallScreen","to","className","opened","switchOpened","closeIconClass","openIconClas","onClick","size","children","onClose","containerClass","MENS_MENU","title","WOMENS_MENU","data","useHistory","location","pathname","useBreakpoints","map","index","length","path","typeName","selected","Dropdown","handleClickOutside","props","close","document","addEventListener","this","removeEventListener","React","Component","divider","LANGS","code","label","useState","setOpened","useSelector","dispatch","useDispatch","countryCode","aria-label","svg","SideMenu","SideMenuItem","style","marginTop","fontWeight","value","isMainPage","Badge","AccountMenu","LangSelector","menuVisible","sideMenuOpened","setSideMenuOpened","Type","MenuButton","Logo","TopClothesMenu","UserMenu","HigerComponent","display","flexDirection","Header","text","onChangeText","placeholder","type","onChange","e","currentTarget","autoComplete","CircularProgress","isEmptyStr","str","email","setEmail","password","setPassword","error","setError","loading","setLoading","onError","useCallback","msg","onSucces","onSubmit","preventDefault","onSuccess","disaptch","a","auth","signInWithEmailAndPassword","then","uid","collection","doc","get","catch","signIn","Container","Title","Input","BottomRedirect","ErrorText","Loading","animProps","useSpring","config","duration","opacity","from","div","Popup","setName","lastName","setLastName","rPassword","setRPassword","success","setSuccess","createUserWithEmailAndPassword","set","console","log","message","createAccount","SuccessWindow","sended","setSended","resend","setResend","sendPasswordResetEmail","AuthRoute","rest","render","SignUp","SignIn","Forgot","component","persistor","exact","withNavigation","Main","Auth","ReactDOM","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.c14586cc.chunk.js","sourcesContent":["export default {\n  ...JSON.parse(process.env.REACT_APP_FIREBASE_CONFIG),\n};\n","import * as firebase from \"firebase\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nimport firebaseConfig from \"../firebaseConfig\";\nfirebase.initializeApp(firebaseConfig.firebaseConfig);\nconst firestore = firebase.firestore();\n\nexport { firestore };\n\nexport default firebase;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { REHYDRATE } from \"redux-persist\";\nimport { UserData } from \"../types\";\nimport firebase, { firestore } from \"../Firebase\";\nimport { AppThunk } from \"../store\";\n\nconst INIT_STATE: {\n  lang: string;\n  user: null | UserData;\n} = {\n  lang: \"US\",\n  user: null,\n};\n\nconst appSlice = createSlice({\n  name: \"app\",\n  initialState: INIT_STATE,\n  reducers: {\n    setLang: (state, action) => {\n      state.lang = action.payload;\n    },\n    setUser: (state, action) => {\n      state.user = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [REHYDRATE]: (state, action) => {\n      const app =\n        action.payload && action.payload.app ? action.payload.app : INIT_STATE;\n      return { ...state, lang: app.lang, user: app.user };\n    },\n  },\n});\n\nexport const { setLang, setUser } = appSlice.actions;\n\nexport default appSlice.reducer;\n\nexport const signIn = (\n  email: string,\n  password: string,\n  onError: (msg: string) => void,\n  onSuccess: () => void\n): AppThunk => async (disaptch) => {\n  firebase\n    .auth()\n    .signInWithEmailAndPassword(email, password)\n    .then(async (data: any) => {\n      const { uid } = data.user;\n\n      const user = await firestore.collection(\"users\").doc(uid).get();\n      disaptch(setUser({ ...user.data(), uid }));\n\n      onSuccess();\n    })\n    .catch((error) => {\n      switch (error.code) {\n        case \"auth/wrong-password\":\n          onError(\"Wrong password\");\n          break;\n        case \"auth/invalid-email\":\n          onError(\"Inavlid email\");\n          break;\n        case \"auth/user-not-found\":\n          onError(\"User not found\");\n          break;\n      }\n    });\n};\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\nexport default combineReducers({\n  app: appReducer,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  ThunkAction,\n  Action,\n} from \"@reduxjs/toolkit\";\nimport reducer from \"./reducers\";\nimport storage from \"redux-persist/lib/storage\";\nimport {\n  persistReducer,\n  persistStore,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PURGE,\n  REGISTER,\n  PERSIST,\n} from \"redux-persist\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: true,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nexport const persistedStore = persistStore(store);\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppThunk = ThunkAction<void, RootState, unknown, Action<string>>;\n","import React from \"react\";\nimport \"./style.scss\";\n\nexport default () => {\n  return <div>Main</div>;\n};\n","export const MAIN = \"/shop\";\nexport const WOMEN_HOME = `${MAIN}/women-home`;\nexport const MEN_HOME = `${MAIN}/men-home`;\nexport const PROFILE = `${MAIN}/profile`;\nexport const ORDERS = `${MAIN}/orders`;\n\nexport const AUTH = `${MAIN}/auth`;\nexport const SIGN_IN = `${MAIN}/auth/sign-in`;\nexport const SIGN_UP = `${MAIN}/auth/sign-up`;\nexport const RESET_PASS = `${MAIN}/auth/password-reset`;\n\n// export const MEN_NEW_ARRIVALS\n","import { useMediaQuery } from \"react-responsive\";\n\nexport default () => {\n  const isBigScreen = useMediaQuery({ minWidth: 900 });\n  const isMediumScreen = useMediaQuery({ maxWidth: 900 });\n  const isSmallScreen = useMediaQuery({ maxWidth: 600 });\n\n  return {\n    isBigScreen,\n    isMediumScreen: isMediumScreen && !isSmallScreen,\n    isSmallScreen: isSmallScreen && isMediumScreen,\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { MAIN } from \"../../navRoutes\";\nimport \"./style.scss\";\n\nexport default () => {\n  return (\n    <Link to={MAIN} className=\"logo\">\n      <h1>ShopLogo</h1>\n    </Link>\n  );\n};\n","import React from \"react\";\nimport { FiMenu, FiX } from \"react-icons/fi\";\n\ninterface Props {\n  switchOpened: () => void;\n  opened: boolean;\n}\n\nexport default ({ opened, switchOpened }: Props) => {\n  const closeIconClass = opened ? \"menu-icon closed\" : \"menu-icon\";\n  const openIconClas = opened ? \"menu-icon\" : \"menu-icon closed\";\n  return (\n    <div className=\"menu-button\" onClick={switchOpened}>\n      {!opened ? (\n        <FiMenu className={openIconClas} size={30} />\n      ) : (\n        <FiX className={closeIconClass} size={30} />\n      )}\n    </div>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { FiX } from \"react-icons/fi\";\nimport \"./style.scss\";\n\ninterface Props {\n  opened: boolean;\n  children: ReactNode;\n  onClose?: () => void;\n}\n\nexport default ({ opened, children, onClose }: Props) => {\n  const containerClass = opened ? \"side-menu opened\" : \"side-menu\";\n  return (\n    <div className={containerClass}>\n      {onClose && (\n        <div className=\"header\">\n          <FiX size={30} onClick={onClose} className=\"close\" />\n        </div>\n      )}\n      <ul>{children}</ul>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport useBreakpoints from \"../../../hooks/useBreakpoints\";\nimport { MEN_HOME } from \"../../../navRoutes\";\n\nconst MENS_MENU = [\n  {\n    title: \"New arrivals\",\n    to: \"\",\n  },\n  {\n    title: \"Pants\",\n    to: \"\",\n  },\n  {\n    title: \"T-shirts\",\n    to: \"\",\n  },\n  {\n    title: \"Jackets\",\n    to: \"\",\n  },\n  {\n    title: \"Shoes\",\n    to: \"\",\n  },\n  {\n    title: \"Accessories\",\n    to: \"\",\n  },\n];\nconst WOMENS_MENU = [\n  {\n    title: \"New arrivals\",\n    to: \"\",\n  },\n  {\n    title: \"Pants\",\n    to: \"\",\n  },\n  {\n    title: \"T-shirts\",\n    to: \"\",\n  },\n  {\n    title: \"Jackets\",\n    to: \"\",\n  },\n  {\n    title: \"Shoes\",\n    to: \"\",\n  },\n  {\n    title: \"Accessories\",\n    to: \"\",\n  },\n];\n\nexport default () => {\n  const {\n    location: { pathname },\n  } = useHistory();\n  const data = pathname === MEN_HOME ? MENS_MENU : WOMENS_MENU;\n  const { isBigScreen } = useBreakpoints();\n  if (isBigScreen) {\n    return (\n      <ul className=\"menu\">\n        {data.map(({ title, to }, index) => (\n          <li key={title}>\n            <div className=\"label\">\n              <Link to={to}>{title}</Link>\n            </div>\n            {index < data.length - 1 && <div className=\"menu-space\" />}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n  return null;\n};\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\n\ninterface Props {\n  path: string;\n  typeName: string;\n}\n\nexport default ({ path, typeName }: Props) => {\n  const {\n    location: { pathname },\n  } = useHistory();\n  const selected = pathname === path;\n  return (\n    <Link to={path} className={selected ? \"type selected\" : \"type\"}>\n      {typeName}\n    </Link>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport \"./style.scss\";\n\ninterface Props {\n  children: ReactNode[];\n  opened: boolean;\n  close: () => void;\n}\n\nexport default class Dropdown extends React.Component<Props> {\n  componentDidMount() {\n    document.addEventListener(\"mouseup\", this.handleClickOutside, false);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"mouseup\", this.handleClickOutside, false);\n  }\n  handleClickOutside = () => {\n    this.props.close();\n  };\n  render() {\n    const { children, opened } = this.props;\n    return (\n      <ul className={opened ? \"dropdown-opened\" : \"dropdown-closed\"}>\n        {children}\n      </ul>\n    );\n  }\n}\n","import React, { ReactNode } from \"react\";\nimport \"./style.scss\";\n\ninterface Props {\n  children: ReactNode;\n  divider?: boolean;\n}\n\nexport default ({ children, divider }: Props) => {\n  return (\n    <li className=\"side-menu-item-container\">\n      <div className=\"side-menu-item\">{children}</div>\n      {divider && <div className=\"side-menu-divider\" />}\n    </li>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ReactCountryFlag from \"react-country-flag\";\nimport Dropdown from \"../Dropdown\";\nimport \"./style.scss\";\nimport { RootState } from \"../../store\";\nimport { setLang } from \"../../reducers/appReducer\";\nimport useBreakpoints from \"../../hooks/useBreakpoints\";\nimport SideMenu from \"../SideMenu\";\nimport SideMenuItem from \"../SideMenuItem\";\n\nconst LANGS = [\n  {\n    code: \"US\",\n    label: \"United States\",\n  },\n  {\n    code: \"PL\",\n    label: \"Poland\",\n  },\n];\n\nexport default () => {\n  const [opened, setOpened] = useState(false);\n  const lang = useSelector((state: RootState) => state.app.lang);\n  const dispatch = useDispatch();\n  const { isBigScreen } = useBreakpoints();\n  return (\n    <div>\n      <div className=\"select-container\">\n        <div className=\"flag-container\" onClick={() => setOpened(!opened)}>\n          <ReactCountryFlag\n            countryCode={lang}\n            aria-label=\"Unied States\"\n            svg\n            className=\"flag-selected\"\n          />\n        </div>\n        {isBigScreen && (\n          <Dropdown opened={opened} close={() => setOpened(false)}>\n            {LANGS.map(({ code, label }, index) => (\n              <li\n                key={code}\n                onClick={() => dispatch(setLang(code))}\n                className={index === 0 ? \"flag-item-first\" : \"flag-item\"}\n              >\n                <ReactCountryFlag\n                  countryCode={code}\n                  aria-label={label}\n                  svg\n                  className=\"flag\"\n                />\n                <p className=\"flag-label\">{code}</p>\n              </li>\n            ))}\n          </Dropdown>\n        )}\n      </div>\n      {!isBigScreen && (\n        <SideMenu opened={opened} onClose={() => setOpened(false)}>\n          {LANGS.map(({ code, label }, index) => (\n            <SideMenuItem divider={index !== LANGS.length - 1}>\n              <ReactCountryFlag\n                countryCode={code}\n                aria-label={label}\n                svg\n                className=\"flag-\"\n              />\n              <p className=\"flag-label\">{code}</p>\n            </SideMenuItem>\n          ))}\n        </SideMenu>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FiArchive, FiUser } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport { MAIN, ORDERS, PROFILE } from \"../../../navRoutes\";\nimport Dropdown from \"../../Dropdown\";\nimport useBreakpoints from \"../../../hooks/useBreakpoints\";\nimport SideMenu from \"../../SideMenu\";\nimport SideMenuItem from \"../../SideMenuItem\";\n\nexport default () => {\n  const [opened, setOpened] = useState(false);\n  const { isBigScreen } = useBreakpoints();\n  return (\n    <div className=\"account-menu-container\">\n      <div className=\"account-menu\">\n        <FiUser\n          className=\"user\"\n          size={25}\n          onClick={() => {\n            setOpened(!opened);\n          }}\n        />\n        {isBigScreen && (\n          <Dropdown opened={opened} close={() => setOpened(false)}>\n            <li className=\"dropdown-item\" style={{ marginTop: 0 }}>\n              <FiUser size={20} className=\"icon\" />\n              <Link to={PROFILE} className=\"label\">\n                Profile\n              </Link>\n            </li>\n            <li className=\"dropdown-item\">\n              <FiArchive size={20} className=\"icon\" />\n              <Link to={ORDERS} className=\"label\">\n                Orders\n              </Link>\n            </li>\n            <div className=\"divider\"></div>\n            <li className=\"dropdown-item\">\n              <Link to={MAIN} className=\"label\">\n                Sign out\n              </Link>\n            </li>\n          </Dropdown>\n        )}\n      </div>\n      {!isBigScreen && (\n        <SideMenu opened={opened} onClose={() => setOpened(false)}>\n          <SideMenuItem divider>\n            <FiUser size={20} className=\"icon\" />\n            <Link to={PROFILE} className=\"label\">\n              Profile\n            </Link>\n          </SideMenuItem>\n          <SideMenuItem divider>\n            <FiArchive size={20} className=\"icon\" />\n            <Link to={ORDERS} className=\"label\">\n              Orders\n            </Link>\n          </SideMenuItem>\n          <SideMenuItem>\n            <Link to={MAIN} className=\"label\" style={{ fontWeight: \"bold\" }}>\n              Sign out\n            </Link>\n          </SideMenuItem>\n        </SideMenu>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  value: string | number;\n}\n\nexport default ({ value }: Props) => {\n  return <div className=\"badge\">{value}</div>;\n};\n","import React from \"react\";\nimport { FiShoppingCart } from \"react-icons/fi\";\nimport { Link } from \"react-router-dom\";\nimport LangSelector from \"../../LangSelector\";\nimport AccountMenu from \"./AccountMenu\";\nimport Badge from \"./Badge\";\n\ninterface Props {\n  isMainPage: boolean;\n}\n\nexport default ({ isMainPage }: Props) => {\n  const signedIn = true;\n  return (\n    <div className=\"user-menu\">\n      {!isMainPage && (\n        <>\n          <Link to=\"cart\" className=\"cart\">\n            <FiShoppingCart size={25} />\n            <Badge value={2} />\n          </Link>\n          <div>\n            {signedIn ? (\n              <AccountMenu />\n            ) : (\n              <Link to=\"loginPage\">\n                <p className=\"login\">Login</p>\n              </Link>\n            )}\n          </div>\n        </>\n      )}\n      <div className=\"select-flag\">\n        <LangSelector />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport useBreakpoints from \"../../hooks/useBreakpoints\";\nimport { MAIN, MEN_HOME, WOMEN_HOME } from \"../../navRoutes\";\nimport Logo from \"../Logo\";\nimport MenuButton from \"./components/MenuButton\";\nimport SideMenu from \"../SideMenu\";\nimport TopClothesMenu from \"./components/TopClothesMenu\";\nimport Type from \"./components/Type\";\nimport UserMenu from \"./components/UserMenu\";\nimport \"./style.scss\";\n\nexport default () => {\n  const {\n    location: { pathname },\n  } = useHistory();\n  const menuVisible = pathname !== MAIN;\n  const { isBigScreen, isMediumScreen, isSmallScreen } = useBreakpoints();\n  const [sideMenuOpened, setSideMenuOpened] = useState(false);\n\n  return (\n    <header>\n      <div className=\"header-container\">\n        {(isBigScreen || isMediumScreen) && (\n          <div>\n            {isBigScreen ? (\n              <>\n                <Type typeName=\"Women\" path={WOMEN_HOME} />\n                <Type typeName=\"Men\" path={MEN_HOME} />\n              </>\n            ) : (\n              <MenuButton\n                opened={sideMenuOpened}\n                switchOpened={() => setSideMenuOpened(!sideMenuOpened)}\n              />\n            )}\n          </div>\n        )}\n        <div className=\"nav\">\n          <Logo />\n          {menuVisible && <TopClothesMenu />}\n        </div>\n        <UserMenu isMainPage={!menuVisible} />\n      </div>\n      {isSmallScreen && (\n        <MenuButton\n          opened={sideMenuOpened}\n          switchOpened={() => setSideMenuOpened(!sideMenuOpened)}\n        />\n      )}\n      {!isBigScreen && (\n        <SideMenu opened={sideMenuOpened}>\n          <div>test</div>\n        </SideMenu>\n      )}\n    </header>\n  );\n};\n","import React from \"react\";\nimport Header from \"../components/Header\";\n\nexport default (HigerComponent: React.ComponentType<any>) => {\n  return (props) => {\n    return (\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header />\n        <HigerComponent {...props} />\n      </div>\n    );\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface Props {\n  text: string;\n  to: string;\n}\n\nexport default ({ text, to }: Props) => {\n  return (\n    <Link to={to} className=\"auth-bottom-info\">\n      {text}\n    </Link>\n  );\n};\n","import React, { ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\nexport default ({ children }: Props) => {\n  return (\n    <div className=\"route-container\">\n      <div className=\"auth-box\">{children}</div>\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  children: string;\n}\n\nexport default ({ children }: Props) => (\n  <p className=\"auth-error\">{children}</p>\n);\n","import React from \"react\";\n\ninterface Props {\n  label: string;\n  onChangeText: (value: string) => void;\n  placeholder: string;\n  value: string;\n  type?: string;\n  name: string;\n}\n\nexport default ({\n  label,\n  onChangeText,\n  placeholder,\n  value,\n  type,\n  name,\n}: Props) => {\n  return (\n    <div className=\"auth-input-container\">\n      <label className=\"auth-input-label\">{label}</label>\n      <input\n        type={type}\n        name={name}\n        value={value}\n        className=\"auth-input\"\n        placeholder={placeholder}\n        onChange={(e) => onChangeText(e.currentTarget.value)}\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n};\n","import { CircularProgress } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default () => {\n  return (\n    <div className=\"auth-loading-container\">\n      <CircularProgress />\n    </div>\n  );\n};\n","import React from \"react\";\n\ninterface Props {\n  title: string;\n}\n\nexport default ({ title }: Props) => {\n  return <h1 className=\"auth-title\">{title}</h1>;\n};\n","/* eslint react-hooks/exhaustive-deps: 0*/\n\nimport React, { useCallback, useState } from \"react\";\nimport { RESET_PASS, SIGN_UP } from \"../../../navRoutes\";\nimport BottomRedirect from \"../components/BottomRedirect\";\nimport Container from \"../components/Container\";\nimport ErrorText from \"../components/ErrorText\";\nimport Input from \"../components/Input\";\nimport Loading from \"../components/Loading\";\nimport { useDispatch } from \"react-redux\";\nimport { signIn } from \"../../../reducers/appReducer\";\nimport Title from \"../components/Title\";\n\nconst isEmptyStr = (str: string) => str.length === 0;\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const onError = useCallback((msg: string) => {\n    setLoading(false);\n    setError(msg);\n  }, []);\n  const onSucces = useCallback(() => {\n    setLoading(false);\n  }, []);\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (isEmptyStr(email) || isEmptyStr(password))\n        setError(\"Some field are empty\");\n      else {\n        setLoading(true);\n        dispatch(signIn(email, password, onError, onSucces));\n      }\n    },\n    [email, password]\n  );\n  return (\n    <Container>\n      <form onSubmit={onSubmit} className=\"auth-form\">\n        <Title title=\"Sign in\" />\n        <Input\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n          onChangeText={(text) => setEmail(text)}\n          name=\"email\"\n          value={email}\n          type=\"email\"\n        />\n\n        <Input\n          label=\"Password\"\n          placeholder=\"Enter password\"\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n          name=\"password\"\n          type=\"password\"\n        />\n        <div className=\"reset-pass-redirect\">\n          <BottomRedirect to={RESET_PASS} text=\"Forgot password?\" />\n        </div>\n\n        <div className=\"auth-button-container\">\n          <button className=\"auth-button\">Sign in</button>\n        </div>\n      </form>\n      <ErrorText>{error}</ErrorText>\n      <BottomRedirect to={SIGN_UP} text={\"Do not have account?\"} />\n      {loading && <Loading />}\n    </Container>\n  );\n};\n","import React, { ReactNode } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport \"./style.scss\";\n\ninterface Props {\n  children: ReactNode | ReactNode[];\n}\n\nexport default ({ children }: Props) => {\n  const animProps = useSpring({\n    config: { duration: 150 },\n    opacity: 1,\n    from: { opacity: 0 },\n  });\n\n  return (\n    <animated.div className=\"popup-window\" style={animProps}>\n      <div className=\"popup-box\">{children}</div>\n    </animated.div>\n  );\n};\n","import React from \"react\";\nimport { FiCheck } from \"react-icons/fi\";\nimport Popup from \"../../../components/Popup\";\nimport { Link } from \"react-router-dom\";\nimport { MAIN } from \"../../../navRoutes\";\n\nexport default () => {\n  return (\n    <Popup>\n      <h1>Success</h1>\n      <FiCheck size={80} className=\"success-icon\" />\n      <h2>Successfully created account</h2>\n      <button className=\"success-button\">\n        <Link to={MAIN}>Ok</Link>\n      </button>\n    </Popup>\n  );\n};\n","/* eslint react-hooks/exhaustive-deps: 0*/\n\nimport React, { useCallback, useState } from \"react\";\nimport { createAccount } from \"../../../Firebase/helpers\";\nimport { SIGN_IN } from \"../../../navRoutes\";\nimport BottomRedirect from \"../components/BottomRedirect\";\nimport Container from \"../components/Container\";\nimport ErrorText from \"../components/ErrorText\";\nimport Input from \"../components/Input\";\nimport Loading from \"../components/Loading\";\nimport SuccessWindow from \"../components/SuccessWindow\";\nimport Title from \"../components/Title\";\n\nconst isEmptyStr = (str: string) => str.length === 0;\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [rPassword, setRPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const onError = useCallback((msg: string) => {\n    setLoading(false);\n    setError(msg);\n  }, []);\n  const onSucces = useCallback(() => {\n    setLoading(false);\n    setSuccess(true);\n  }, []);\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (\n        isEmptyStr(email) ||\n        isEmptyStr(name) ||\n        isEmptyStr(lastName) ||\n        isEmptyStr(password) ||\n        isEmptyStr(rPassword)\n      )\n        setError(\"Some field are empty\");\n      else if (password.length < 6)\n        setError(\"Password must be at least 6 characters\");\n      else if (password !== rPassword)\n        setError(\"Both password must be the smae\");\n      else {\n        setLoading(true);\n        createAccount(\n          { email, name, lastName, password, rPassword },\n          onError,\n          onSucces\n        );\n      }\n    },\n    [email, name, lastName, password, rPassword]\n  );\n  return (\n    <Container>\n      <form onSubmit={onSubmit} className=\"auth-form\" autoComplete=\"off\">\n        <Title title=\"Create account\" />\n        <Input\n          label=\"Email\"\n          placeholder=\"Enter your email\"\n          onChangeText={(text) => setEmail(text)}\n          name=\"email\"\n          value={email}\n        />\n        <Input\n          label=\"Name\"\n          placeholder=\"Enter your name\"\n          onChangeText={(text) => setName(text)}\n          name=\"name\"\n          value={name}\n        />\n        <Input\n          label=\"Last name\"\n          placeholder=\"Enter your last name\"\n          onChangeText={(text) => setLastName(text)}\n          name=\"last_name\"\n          value={lastName}\n        />\n        <Input\n          label=\"Password\"\n          placeholder=\"Enter password\"\n          onChangeText={(text) => setPassword(text)}\n          value={password}\n          name=\"password\"\n          type=\"password\"\n        />\n        <Input\n          label=\"Repeat password\"\n          placeholder=\"Enter password\"\n          onChangeText={(text) => setRPassword(text)}\n          value={rPassword}\n          name=\"reapt_password\"\n          type=\"password\"\n        />\n        <div className=\"auth-button-container\">\n          <button className=\"auth-button\">Sign up</button>\n        </div>\n      </form>\n      <ErrorText>{error}</ErrorText>\n      <BottomRedirect to={SIGN_IN} text={\"Already have account?\"} />\n      {loading && <Loading />}\n      {success && <SuccessWindow />}\n    </Container>\n  );\n};\n","import firebase, { firestore } from \"./index\";\n\nexport const createAccount = (\n  data: {\n    email: string;\n    password: string;\n    rPassword: string;\n    lastName: string;\n    name: string;\n  },\n  onError: (msg: string) => void,\n  onSucces\n) => {\n  const { email, password, lastName, name } = data;\n  firebase\n    .auth()\n    .createUserWithEmailAndPassword(email, password)\n    .then((data: any) => {\n      const { uid } = data.user;\n      firestore.collection(\"users\").doc(uid).set({ email, lastName, name });\n      onSucces();\n    })\n    .catch((error) => {\n      console.log(error.message);\n      console.log(error.code);\n      switch (error.code) {\n        case \"auth/invalid-email\":\n          onError(\"Invalid email\");\n          break;\n        case \"auth/email-already-in-use\":\n          onError(\"User is already exist\");\n          break;\n      }\n    });\n};\n","import React, { useCallback, useState } from \"react\";\nimport { FiCheck } from \"react-icons/fi\";\nimport Popup from \"../../../components/Popup\";\nimport Container from \"../components/Container\";\nimport Input from \"../components/Input\";\nimport Title from \"../components/Title\";\nimport firebase from \"../../../Firebase\";\nimport ErrorText from \"../components/ErrorText\";\nimport BottomRedirect from \"../components/BottomRedirect\";\nimport { SIGN_IN } from \"../../../navRoutes\";\n\nexport default () => {\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [sended, setSended] = useState(false);\n  const [resend, setResend] = useState(false);\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      firebase\n        .auth()\n        .sendPasswordResetEmail(email)\n        .then(() => {\n          setSended(true);\n          setResend(true);\n        })\n        .catch((error) => {\n          console.log(error.code);\n          if (error.code === \"auth/invalid-email\") setError(\"Inavlid email\");\n          else if (error.code === \"auth/user-not-found\")\n            setError(\"User does not exist\");\n        });\n    },\n    [email]\n  );\n  return (\n    <Container>\n      <form className=\"auth-form\" onSubmit={onSubmit}>\n        <Title title=\"Reset password\" />\n        <Input\n          label=\"Email\"\n          value={email}\n          placeholder=\"Enter your email\"\n          onChangeText={(text) => setEmail(text)}\n          name=\"email\"\n        />\n        <ErrorText>{error}</ErrorText>\n        <button className=\"send-button\">{resend ? \"Resend\" : \"Send\"}</button>\n        <BottomRedirect to={SIGN_IN} text=\"Back to login page\" />\n      </form>\n      {sended && (\n        <Popup>\n          <h1>Successfuly sended reset email</h1>\n          <FiCheck size={80} className=\"success-icon\" />\n          <p className=\"reset-info\">Check your mailbox to reset your email</p>\n\n          <button\n            className=\"popup-confirm-button\"\n            onClick={() => {\n              setSended(false);\n              setEmail(\"\");\n            }}\n          >\n            Ok\n          </button>\n        </Popup>\n      )}\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Logo from \"../../components/Logo\";\nimport { MAIN, RESET_PASS, SIGN_IN, SIGN_UP } from \"../../navRoutes\";\nimport { RootState } from \"../../store\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport { useSelector } from \"react-redux\";\nimport \"./style.scss\";\nimport Forgot from \"./Forgot\";\nimport LangSelector from \"../../components/LangSelector\";\n\nconst AuthRoute = ({ children, ...rest }) => {\n  const user = useSelector((state: RootState) => state.app.user);\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        !user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: MAIN,\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default () => {\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-header\">\n        <Logo />\n        <LangSelector />\n      </div>\n      <div className=\"route-screen\">\n        <Switch>\n          <AuthRoute path={SIGN_UP}>\n            <SignUp />\n          </AuthRoute>\n          <AuthRoute path={SIGN_IN}>\n            <SignIn />\n          </AuthRoute>\n          <AuthRoute path={RESET_PASS}>\n            <Forgot />\n          </AuthRoute>\n          <Route path=\"*\" component={() => <Redirect to={SIGN_IN} />} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport store, { persistedStore } from \"./store\";\nimport Main from \"./screens/Main\";\nimport { AUTH, MAIN, MEN_HOME, WOMEN_HOME } from \"./navRoutes\";\n\nimport withNavigation from \"./hocs/withNavigation\";\nimport \"./style.scss\";\nimport Auth from \"./screens/Auth\";\n\nexport default () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistedStore}>\n      <Router>\n        <Switch>\n          <Route exact path={MAIN} component={withNavigation(Main)} />\n          <Route\n            exact\n            path={MEN_HOME}\n            component={withNavigation(() => {\n              return <div>Men home</div>;\n            })}\n          />\n          <Route\n            exact\n            path={WOMEN_HOME}\n            component={withNavigation(() => {\n              return <div>Women home</div>;\n            })}\n          />\n          <Route path={AUTH} component={Auth} />\n        </Switch>\n      </Router>\n    </PersistGate>\n  </Provider>\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}